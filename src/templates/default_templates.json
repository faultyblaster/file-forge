{
    "$schema": "./schema.json",
    "languages": [
        {
            "alias": "C#",
            "extension": "cs",
            "requireNamespace": true,
            "templates": [
                {
                    "alias": "Class",
                    "description": "A simple top level class file",
                    "fileName": "Class",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   $0",
                        "}"
                    ]
                },
                {
                    "alias": "Class (no namespace)",
                    "description": "A simple top level class file without a namespace",
                    "fileName": "Class",
                    "snippet": [
                        "public class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   $0",
                        "}"
                    ]
                },
                {
                    "alias": "Enum",
                    "description": "A simple top level enum file",
                    "fileName": "Enum",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public enum ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   Value1,",
                        "   Value2,",
                        "   Value3",
                        "}"
                    ]
                },
                {
                    "alias": "Interface",
                    "description": "A simple top level interface file",
                    "fileName": "Interface",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public interface ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   void Method();",
                        "}"
                    ]
                },
                {
                    "alias": "Record",
                    "description": "A simple record file (C# 9+)",
                    "fileName": "Record",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public record ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}(string Name, int Age);"
                    ]
                },
                {
                    "alias": "Struct",
                    "description": "A simple struct file",
                    "fileName": "Struct",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public struct ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   public int Id { get; set; }",
                        "   public string Name { get; set; }",
                        "}"
                    ]
                },
                {
                    "alias": "XUnitTest",
                    "description": "A simple xUnit test class",
                    "fileName": "XUnitTest",
                    "snippet": [
                        "using Xunit;",
                        "",
                        "namespace [namespace];",
                        "",
                        "public class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   [Fact]",
                        "   public void TestMethod()",
                        "   {",
                        "       // Arrange",
                        "       ",
                        "       // Act",
                        "       ",
                        "       // Assert",
                        "       Assert.True(true);",
                        "   }",
                        "}"
                    ]
                },
                {
                    "alias": "Global Usings",
                    "description": "All your global usings must be placed here",
                    "fileName": "GlobalUsings",
                    "snippet": [
                        "// GlobalUsings.cs",
                        "global using static System.Console;",
                        "",
                        "// Database management",
                        "// global using Microsoft.EntityFrameworkCore;",
                        "// global using Npgsql.EntityFrameworkCore.PostgreSQL;",
                        "// global using MySql.EntityFrameworkCore;",
                        "// global using MongoDB.Driver;",
                        "// ",
                        "// Working with math",
                        "// global using System.Math;",
                        "// global using System.Numerics;",
                        "// global using System.Numerics.BigInteger;",
                        "// ",
                        "// Microsoft Extensions",
                        "// global using Microsoft.Extensions.DependencyInjection;",
                        "// global using Microsoft.Extensions.Logging;",
                        "// global using Microsoft.Extensions.Options;",
                        "",
                        "// Entity Framework Core (if using EF Core)",
                        "// global using Microsoft.EntityFrameworkCore;",
                        "// global using Microsoft.EntityFrameworkCore.Metadata.Builders;",
                        "",
                        "// JSON & Serialization",
                        "// global using System.Text.Json;",
                        "// global using System.Text.Json.Serialization;",
                        "// global using Newtonsoft.Json; // This is the old way of serializing JSON, but still widely used",
                        "// global using YamlDotNet.Serialization; // YAML",
                        "",
                        "// Reflection",
                        "// global using System.Reflection;",
                        "",
                        "// Database Access",
                        "// global using Microsoft.Data.SqlClient;",
                        "// global using System.Data;",
                        "// global using Npgsql; // PostgreSQL",
                        "// global using MySql.Data.MySqlClient; // MySQL",
                        "// global using MongoDB.Driver; // MongoDB",
                        "",
                        "// Testing",
                        "// global using Xunit;",
                        "// global using NUnit.Framework;",
                        "// global using Microsoft.VisualStudio.TestTools.UnitTesting;",
                        "// global using Moq;",
                        "// global using FluentAssertions;",
                        ""
                    ]
                }
            ]
        },
        {
            "alias": "TypeScript",
            "extension": "ts",
            "requireNamespace": false,
            "templates": [
                {
                    "alias": "class",
                    "description": "A simple Class",
                    "fileName": "class",
                    "snippet": [
                        "class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} {",
                        "\t$0",
                        "}"
                    ]
                },
                {
                    "alias": "interface",
                    "description": "A simple Interface",
                    "fileName": "interface",
                    "snippet": [
                        "interface ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} {",
                        "\t$0",
                        "}"
                    ]
                },
                {
                    "alias": "enum",
                    "description": "A simple Enum",
                    "fileName": "enum",
                    "snippet": [
                        "enum ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} {",
                        "\t$0",
                        "}"
                    ]
                },
                {
                    "alias": "function",
                    "description": "A simple Function",
                    "fileName": "function",
                    "snippet": [
                        "function ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}() {",
                        "\t$0",
                        "}"
                    ]
                },
                {
                    "alias": "Hello World Script",
                    "description": "A simple Hello World script",
                    "fileName": "main",
                    "snippet": ["console.log(\"Hello World\");"]
                },
                {
                    "alias": "type",
                    "description": "A simple Type",
                    "fileName": "type",
                    "snippet": [
                        "type ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} = {",
                        "\t$0",
                        "};"
                    ]
                }
            ]
        },
        {
            "alias": "Python",
            "extension": "py",
            "requireNamespace": false,
            "templates": [
                {
                    "alias": "script",
                    "description": "Simple hello world script",
                    "fileName": "script",
                    "snippet": ["print(\"Hello world\")"]
                },
                {
                    "alias": "requirements",
                    "description": "Save all your dependencies here",
                    "extensionOverride": "txt",
                    "fileName": "requirements",
                    "snippet": [
                        "# Add your dependencies here",
                        "# Example: requests==2.25.1",
                        "",
                        "# To install all dependencies run:",
                        "# pip install -r requirements.txt",
                        "",
                        "# To update the requirements file run:",
                        "# pip freeze > requirements.txt",
                        "",
                        "# Common dependencies",
                        "# requests==2.25.1",
                        "# numpy==2.2.0",
                        "# pandas",
                        "# matplotlib"
                    ]
                },
                {
                    "alias": "main",
                    "description": "Main file",
                    "fileName": "main",
                    "snippet": [
                        "def main():",
                        "\t$0",
                        "",
                        "if __name__ == \"__main__\":",
                        "\tmain()"
                    ]
                }
            ]
        },
        {
            "alias": "Other",
            "extension": "txt",
            "requireNamespace": false,
            "templates": [
                {
                    "alias": "text",
                    "description": "Simple text file",
                    "fileName": "text",
                    "extensionOverride": "txt",
                    "snippet": ["This is a simple text file"]
                },
                {
                    "alias": "markdown",
                    "description": "Simple markdown file",
                    "fileName": "markdown",
                    "extensionOverride": "md",
                    "snippet": [
                        "# Markdown",
                        "",
                        "This is a simple markdown file"
                    ]
                },
                {
                    "alias": "json",
                    "description": "Simple JSON file",
                    "fileName": "json",
                    "extensionOverride": "json",
                    "snippet": ["{", "   \"key\": \"value\"", "}"]
                },
                {
                    "alias": "yaml",
                    "description": "Simple YAML file",
                    "fileName": "yaml",
                    "extensionOverride": "yaml",
                    "snippet": ["key: value"]
                },
                {
                    "alias": "xml",
                    "description": "Simple XML file",
                    "fileName": "xml",
                    "extensionOverride": "xml",
                    "snippet": ["<root>", "   <key>value</key>", "</root>"]
                },
                {
                    "alias": "csv",
                    "description": "Simple CSV file",
                    "fileName": "csv",
                    "extensionOverride": "csv",
                    "snippet": ["key1,key2,key3", "value1,value2,value3"]
                },
                {
                    "alias": "dockerfile",
                    "description": "Simple Dockerfile",
                    "fileName": "Dockerfile",
                    "extensionOverride": "dockerfile",
                    "snippet": [
                        "FROM python:3.8",
                        "",
                        "WORKDIR /app",
                        "",
                        "COPY . .",
                        "",
                        "RUN pip install -r requirements.txt",
                        "",
                        "CMD [\"python\", \"main.py\"]"
                    ]
                },
                {
                    "alias": "gitignore",
                    "description": "Simple .gitignore file",
                    "fileName": ".gitignore",
                    "extensionOverride": "",
                    "snippet": [
                        "# Ignore all .log files",
                        "*.log",
                        "",
                        "# Ignore all .txt files",
                        "*.txt",
                        "",
                        "# Ignore bin and obj folders",
                        "bin/",
                        "obj/"
                    ]
                }
            ]
        },
        {
            "alias": "C++",
            "extension": "cpp",
            "requireNamespace": false,
            "templates": [
                {
                    "alias": "class",
                    "description": "A simple Class",
                    "fileName": "class",
                    "snippet": [
                        "class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} {",
                        "public:",
                        "\t$0",
                        "};"
                    ]
                },
                {
                    "alias": "function",
                    "description": "A simple Function",
                    "fileName": "function",
                    "snippet": [
                        "void ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}() {",
                        "\t$0",
                        "}"
                    ]
                },
                {
                    "alias": "main",
                    "description": "Main file",
                    "fileName": "main",
                    "snippet": [
                        "#include <iostream>",
                        "",
                        "int main() {",
                        "\t$0",
                        "}"
                    ]
                },
                {
                    "alias": "header",
                    "description": "Header file",
                    "fileName": "header",
                    "snippet": [
                        "#ifndef ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}_H",
                        "#define ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}_H",
                        "",
                        "class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} {",
                        "public:",
                        "\t$0",
                        "};",
                        "",
                        "#endif"
                    ]
                },
                {
                    "alias": "makefile",
                    "description": "Simple Makefile",
                    "fileName": "Makefile",
                    "snippet": [
                        "CC = g++",
                        "CFLAGS = -Wall -g",
                        "",
                        "all: main",
                        "",
                        "main: main.cpp",
                        "\t$(CC) $(CFLAGS) -o main main.cpp",
                        "",
                        "clean:",
                        "\trm -f main"
                    ]
                },
                {
                    "alias": "cmake",
                    "description": "Simple CMakeLists.txt",
                    "fileName": "CMakeLists",
                    "extensionOverride": "txt",
                    "snippet": [
                        "cmake_minimum_required(VERSION 3.10)",
                        "",
                        "project(${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/})",
                        "",
                        "add_executable(${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} main.cpp)"
                    ]
                }
            ]
        },
        {
            "alias": "html",
            "extension": "html",
            "requireNamespace": false,
            "templates": [
                {
                    "alias": "html",
                    "description": "Simple HTML file",
                    "fileName": "index",
                    "snippet": [
                        "<!DOCTYPE html>",
                        "<html>",
                        "<head>",
                        "\t<title>${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}</title>",
                        "</head>",
                        "<body>",
                        "\t$0",
                        "</body>",
                        "</html>"
                    ]
                },
                {
                    "alias": "css",
                    "description": "Simple CSS file",
                    "fileName": "style",
                    "extensionOverride": "css",
                    "snippet": ["body {", "\tmargin: 0;", "\tpadding: 0;", "}"]
                },
                {
                    "alias": "html5",
                    "description": "HTML5 Boilerplate",
                    "fileName": "index",
                    "snippet": [
                        "<!DOCTYPE html>",
                        "<html lang=\"en\">",
                        "<head>",
                        "\t<meta charset=\"UTF-8\">",
                        "\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
                        "\t<title>${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}</title>",
                        "</head>",
                        "<body>",
                        "\t$0",
                        "</body>",
                        "</html>"
                    ]
                }
            ]
        }
    ]
}
